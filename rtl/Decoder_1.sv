// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module Decoder_1(	// src/main/scala/nutcore/frontend/IDU.scala:26:7
  input         clock,	// src/main/scala/nutcore/frontend/IDU.scala:26:7
  output        io_out_bits_cf_intrVec_0,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_1,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_2,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_3,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_4,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_5,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_6,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_7,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_8,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_9,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_10,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
                io_out_bits_cf_intrVec_11,	// src/main/scala/nutcore/frontend/IDU.scala:27:14
  input  [11:0] intrVec__bore
);

  wire [63:0] _LogPerfHelper_timer;	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
  `ifndef SYNTHESIS	// src/main/scala/utils/Debug.scala:49:26
    always @(posedge clock) begin	// src/main/scala/utils/Debug.scala:49:26
      if ((`PRINTF_COND_) & 1'h0) begin	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :27:14, src/main/scala/utils/Debug.scala:49:26, :50:15
        $fwrite(32'h80000002, "[%d] Decoder_1: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002, "issue: pc %x npc %x instr %x\n", 39'h0, 39'h0, 64'h0);	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :27:14, src/main/scala/utils/Debug.scala:49:26, :50:15
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  LogPerfHelper LogPerfHelper (	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
    .timer     (_LogPerfHelper_timer),
    .logEnable (/* unused */),
    .clean     (/* unused */),
    .dump      (/* unused */)
  );
  assign io_out_bits_cf_intrVec_0 = intrVec__bore[0];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_1 = intrVec__bore[1];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_2 = intrVec__bore[2];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_3 = intrVec__bore[3];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_4 = intrVec__bore[4];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_5 = intrVec__bore[5];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_6 = intrVec__bore[6];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_7 = intrVec__bore[7];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_8 = intrVec__bore[8];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_9 = intrVec__bore[9];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_10 = intrVec__bore[10];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
  assign io_out_bits_cf_intrVec_11 = intrVec__bore[11];	// src/main/scala/nutcore/frontend/IDU.scala:26:7, :171:38
endmodule

