// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module BPU_inorder(	// src/main/scala/nutcore/frontend/BPU.scala:280:7
  input         clock,	// src/main/scala/nutcore/frontend/BPU.scala:280:7
                reset,	// src/main/scala/nutcore/frontend/BPU.scala:280:7
                io_in_pc_valid,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  input  [38:0] io_in_pc_bits,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  output [38:0] io_out_target,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  output        io_out_valid,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  input         io_flush,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  output [2:0]  io_brIdx,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  output        io_crosslineJump,	// src/main/scala/nutcore/frontend/BPU.scala:281:14
  input         flushBTB__bore,
                flushTLB__bore,
                req__bore_valid,
  input  [38:0] req__bore_pc,
  input         req__bore_isMissPredict,
  input  [38:0] req__bore_actualTarget,
  input         req__bore_actualTaken,
  input  [6:0]  req__bore_fuOpType,
  input  [1:0]  req__bore_btbType,
  input         req__bore_isRVC
);

  wire        io_out_valid_0;	// src/main/scala/nutcore/frontend/BPU.scala:422:26
  wire [38:0] io_out_target_0;	// src/main/scala/nutcore/frontend/BPU.scala:418:23
  wire [38:0] _ras_ext_R0_data;	// src/main/scala/nutcore/frontend/BPU.scala:353:16
  wire [1:0]  _pht_ext_R0_data;	// src/main/scala/nutcore/frontend/BPU.scala:343:16
  wire [1:0]  _pht_ext_R1_data;	// src/main/scala/nutcore/frontend/BPU.scala:343:16
  wire [63:0] _LogPerfHelper_timer;	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
  wire        _LogPerfHelper_logEnable;	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
  wire        _btb_io_rreq_ready;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  wire [27:0] _btb_io_rresp_data_0_tag;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  wire [1:0]  _btb_io_rresp_data_0__type;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  wire [38:0] _btb_io_rresp_data_0_target;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  wire [2:0]  _btb_io_rresp_data_0_brIdx;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  wire        _btb_io_rresp_data_0_valid;	// src/main/scala/nutcore/frontend/BPU.scala:302:19
  reg         flush;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        _btb_reset_T_1 = flushBTB__bore | flushTLB__bore;	// src/main/scala/nutcore/frontend/BPU.scala:308:42
  reg  [38:0] pcLatch;	// src/main/scala/nutcore/frontend/BPU.scala:319:26
  reg         btbHit_REG;	// src/main/scala/nutcore/frontend/BPU.scala:320:93
  wire        btbHit =
    _btb_io_rresp_data_0_valid & _btb_io_rresp_data_0_tag == pcLatch[38:11] & ~flush
    & btbHit_REG & ~(pcLatch[1] & _btb_io_rresp_data_0_brIdx[0]);	// src/main/scala/nutcore/frontend/BPU.scala:35:65, :302:19, :319:26, :320:{45,76,93,130,133,142,146,162}, src/main/scala/utils/StopWatch.scala:24:20
  wire        crosslineJump = _btb_io_rresp_data_0_brIdx[2] & btbHit;	// src/main/scala/nutcore/frontend/BPU.scala:302:19, :320:130, :330:{36,40}
  reg  [63:0] c;	// src/main/scala/utils/GTimer.scala:24:20
  wire [2:0]  _GEN = {crosslineJump, {2{io_out_valid_0}}};	// src/main/scala/nutcore/frontend/BPU.scala:330:40, :335:{74,94}, :422:26
  reg         phtResetState;	// src/main/scala/nutcore/frontend/BPU.scala:339:30
  reg  [8:0]  phtResetIdx;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         phtTaken;	// src/main/scala/nutcore/frontend/BPU.scala:345:27
  reg         rasResetState;	// src/main/scala/nutcore/frontend/BPU.scala:349:30
  reg  [3:0]  rasResetIdx;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0]  sp_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [38:0] rasTarget;	// src/main/scala/nutcore/frontend/BPU.scala:356:28
  `ifndef SYNTHESIS	// src/main/scala/utils/Debug.scala:49:26
    always @(posedge clock) begin	// src/main/scala/utils/Debug.scala:49:26
      if ((`PRINTF_COND_) & (reset | _btb_reset_T_1) & _LogPerfHelper_logEnable
          & ~reset) begin	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/nutcore/frontend/BPU.scala:308:42, :309:22, src/main/scala/utils/Debug.scala:49:26, :50:15
        $fwrite(32'h80000002, "[%d] BPU_inorder: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002, "[BPU-RESET] bpu-reset flushBTB:%d flushTLB:%d\n",
                flushBTB__bore, flushTLB__bore);	// src/main/scala/utils/Debug.scala:49:26, :50:15
      end
      if ((`PRINTF_COND_) & btbHit & _LogPerfHelper_logEnable & ~reset) begin	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/nutcore/frontend/BPU.scala:320:130, src/main/scala/utils/Debug.scala:49:26, :50:15
        $fwrite(32'h80000002, "[%d] BPU_inorder: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002,
                "[BTBHT1] %d pc=%x tag=%x,%x index=%x bridx=%x tgt=%x,%x flush %x type:%x\n",
                c, pcLatch, _btb_io_rresp_data_0_tag, pcLatch[38:11], pcLatch[10:2],
                _btb_io_rresp_data_0_brIdx, _btb_io_rresp_data_0_target,
                io_out_target_0, flush, _btb_io_rresp_data_0__type);	// src/main/scala/nutcore/frontend/BPU.scala:35:65, :302:19, :319:26, :418:23, src/main/scala/utils/Debug.scala:49:26, :50:15, src/main/scala/utils/GTimer.scala:24:20, src/main/scala/utils/StopWatch.scala:24:20
        $fwrite(32'h80000002, "[%d] BPU_inorder: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002, "[BTBHT2] btbRead.brIdx %x mask %x\n",
                _btb_io_rresp_data_0_brIdx, _GEN);	// src/main/scala/nutcore/frontend/BPU.scala:302:19, :335:74, src/main/scala/utils/Debug.scala:49:26, :50:15
      end
      if ((`PRINTF_COND_) & req__bore_valid & _LogPerfHelper_logEnable & ~reset) begin	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26, :50:15
        $fwrite(32'h80000002, "[%d] BPU_inorder: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002, "[BTBUP] pc=%x tag=%x index=%x bridx=%x tgt=%x type=%x\n",
                req__bore_pc, req__bore_pc[38:11], req__bore_pc[10:2],
                {req__bore_pc[1], ~(req__bore_pc[1])}, req__bore_actualTarget,
                req__bore_btbType);	// src/main/scala/nutcore/frontend/BPU.scala:35:65, :363:{138,145,150}, src/main/scala/utils/Debug.scala:49:26, :50:15
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  reg  [1:0]  cnt;	// src/main/scala/nutcore/frontend/BPU.scala:399:20
  reg         reqLatch_valid;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
  reg  [38:0] reqLatch_pc;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
  reg         reqLatch_actualTaken;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
  reg  [6:0]  reqLatch_fuOpType;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
  wire [3:0]  _value_T = sp_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7, :409:57
  wire        _rasWen_T = req__bore_fuOpType == 7'h5C;	// src/main/scala/nutcore/frontend/BPU.scala:411:61
  assign io_out_target_0 =
    (&_btb_io_rresp_data_0__type) ? rasTarget : _btb_io_rresp_data_0_target;	// src/main/scala/nutcore/frontend/BPU.scala:302:19, :356:28, :418:{23,38}
  assign io_out_valid_0 =
    btbHit & (_btb_io_rresp_data_0__type == 2'h0 ? phtTaken : (|rasTarget));	// src/main/scala/nutcore/frontend/BPU.scala:302:19, :320:130, :335:94, :345:27, :356:28, :422:{26,32,47,91}
  always @(posedge clock) begin	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    if (reset) begin	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      flush <= 1'h0;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, src/main/scala/utils/StopWatch.scala:24:20
      btbHit_REG <= 1'h0;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :320:93
      c <= 64'h0;	// src/main/scala/utils/GTimer.scala:24:20
      phtResetState <= 1'h1;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :339:30
      phtResetIdx <= 9'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      rasResetState <= 1'h1;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :349:30
      rasResetIdx <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7
      sp_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7
    end
    else begin	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      flush <= io_flush | ~io_in_pc_valid & flush;	// src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      btbHit_REG <= _btb_io_rreq_ready;	// src/main/scala/nutcore/frontend/BPU.scala:302:19, :320:93
      c <= c + 64'h1;	// src/main/scala/utils/GTimer.scala:24:20, :25:12
      phtResetState <= ~(phtResetState & (&phtResetIdx)) & phtResetState;	// src/main/scala/chisel3/util/Counter.scala:61:40, :73:24, :117:24, :118:{16,23}, src/main/scala/nutcore/frontend/BPU.scala:339:30, :341:{25,41}
      if (phtResetState)	// src/main/scala/nutcore/frontend/BPU.scala:339:30
        phtResetIdx <= phtResetIdx + 9'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      rasResetState <= ~(rasResetState & (&rasResetIdx)) & rasResetState;	// src/main/scala/chisel3/util/Counter.scala:61:40, :73:24, :117:24, :118:{16,23}, src/main/scala/nutcore/frontend/BPU.scala:349:30, :351:{25,41}
      if (rasResetState)	// src/main/scala/nutcore/frontend/BPU.scala:349:30
        rasResetIdx <= rasResetIdx + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24, src/main/scala/nutcore/frontend/BPU.scala:280:7
      if (req__bore_valid) begin
        if (_rasWen_T)	// src/main/scala/nutcore/frontend/BPU.scala:411:61
          sp_value <= _value_T;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:409:57
        else if (req__bore_fuOpType == 7'h5E)	// src/main/scala/nutcore/frontend/BPU.scala:415:29
          sp_value <= sp_value - 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:415:72
      end
    end
    if (io_in_pc_valid) begin	// src/main/scala/nutcore/frontend/BPU.scala:281:14
      pcLatch <= io_in_pc_bits;	// src/main/scala/nutcore/frontend/BPU.scala:319:26
      phtTaken <= ~phtResetState & _pht_ext_R0_data[1];	// src/main/scala/nutcore/frontend/BPU.scala:339:30, :343:16, :344:31, :345:27
      rasTarget <= rasResetState ? 39'h0 : _ras_ext_R0_data;	// src/main/scala/nutcore/frontend/BPU.scala:349:30, :353:16, :355:20, :356:28, :359:34
    end
    cnt <= phtResetState ? 2'h0 : _pht_ext_R1_data;	// src/main/scala/nutcore/frontend/BPU.scala:335:94, :339:30, :343:16, :344:31, :399:20
    reqLatch_valid <= req__bore_valid;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
    reqLatch_pc <= req__bore_pc;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
    reqLatch_actualTaken <= req__bore_actualTaken;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
    reqLatch_fuOpType <= req__bore_fuOpType;	// src/main/scala/nutcore/frontend/BPU.scala:400:25
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      automatic logic [31:0] _RANDOM[0:7];	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/nutcore/frontend/BPU.scala:280:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/nutcore/frontend/BPU.scala:280:7
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM[i[2:0]] = `RANDOM;	// src/main/scala/nutcore/frontend/BPU.scala:280:7
        end	// src/main/scala/nutcore/frontend/BPU.scala:280:7
        flush = _RANDOM[3'h0][0];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, src/main/scala/utils/StopWatch.scala:24:20
        pcLatch = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][7:0]};	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :319:26, src/main/scala/utils/StopWatch.scala:24:20
        btbHit_REG = _RANDOM[3'h1][8];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :319:26, :320:93
        c = {_RANDOM[3'h1][31:9], _RANDOM[3'h2], _RANDOM[3'h3][8:0]};	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :319:26, src/main/scala/utils/GTimer.scala:24:20
        phtResetState = _RANDOM[3'h3][9];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :339:30, src/main/scala/utils/GTimer.scala:24:20
        phtResetIdx = _RANDOM[3'h3][18:10];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7, src/main/scala/utils/GTimer.scala:24:20
        phtTaken = _RANDOM[3'h3][19];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :345:27, src/main/scala/utils/GTimer.scala:24:20
        rasResetState = _RANDOM[3'h3][20];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :349:30, src/main/scala/utils/GTimer.scala:24:20
        rasResetIdx = _RANDOM[3'h3][24:21];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7, src/main/scala/utils/GTimer.scala:24:20
        sp_value = _RANDOM[3'h3][28:25];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:280:7, src/main/scala/utils/GTimer.scala:24:20
        rasTarget = {_RANDOM[3'h3][31:29], _RANDOM[3'h4], _RANDOM[3'h5][3:0]};	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :356:28, src/main/scala/utils/GTimer.scala:24:20
        cnt = _RANDOM[3'h5][5:4];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :356:28, :399:20
        reqLatch_valid = _RANDOM[3'h5][6];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :356:28, :400:25
        reqLatch_pc = {_RANDOM[3'h5][31:7], _RANDOM[3'h6][13:0]};	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :356:28, :400:25
        reqLatch_actualTaken = _RANDOM[3'h7][22];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :400:25
        reqLatch_fuOpType = _RANDOM[3'h7][29:23];	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :400:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/nutcore/frontend/BPU.scala:280:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  SRAMTemplate btb (	// src/main/scala/nutcore/frontend/BPU.scala:302:19
    .clock                     (clock),
    .reset                     (reset | _btb_reset_T_1),	// src/main/scala/nutcore/frontend/BPU.scala:308:{29,42}
    .io_rreq_ready            (_btb_io_rreq_ready),
    .io_rreq_valid            (io_in_pc_valid),
    .io_rreq_bits_setIdx      (io_in_pc_bits[10:2]),	// src/main/scala/nutcore/frontend/BPU.scala:35:65
    .io_rresp_data_0_tag      (_btb_io_rresp_data_0_tag),
    .io_rresp_data_0__type    (_btb_io_rresp_data_0__type),
    .io_rresp_data_0_target   (_btb_io_rresp_data_0_target),
    .io_rresp_data_0_brIdx    (_btb_io_rresp_data_0_brIdx),
    .io_rresp_data_0_valid    (_btb_io_rresp_data_0_valid),
    .io_wreq_valid            (req__bore_isMissPredict & req__bore_valid),	// src/main/scala/nutcore/frontend/BPU.scala:385:43
    .io_wreq_bits_setIdx      (req__bore_pc[10:2]),	// src/main/scala/nutcore/frontend/BPU.scala:35:65
    .io_wreq_bits_data_tag    (req__bore_pc[38:11]),	// src/main/scala/nutcore/frontend/BPU.scala:35:65
    .io_wreq_bits_data__type  (req__bore_btbType),
    .io_wreq_bits_data_target (req__bore_actualTarget),
    .io_wreq_bits_data_brIdx
      ({req__bore_pc[2:0] == 3'h6 & ~req__bore_isRVC,
        req__bore_pc[1],
        ~(req__bore_pc[1])})	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :363:145, :377:{24,31,36,46,49,72}
  );
  LogPerfHelper LogPerfHelper (	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
    .timer     (_LogPerfHelper_timer),
    .logEnable (_LogPerfHelper_logEnable),
    .clean     (/* unused */),
    .dump      (/* unused */)
  );
  pht_512x2 pht_ext (	// src/main/scala/nutcore/frontend/BPU.scala:343:16
    .R0_addr (io_in_pc_bits[10:2]),	// src/main/scala/nutcore/frontend/BPU.scala:35:65
    .R0_en   (1'h1),	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    .R0_clk  (clock),
    .R0_data (_pht_ext_R0_data),
    .R1_addr (req__bore_pc[10:2]),	// src/main/scala/nutcore/frontend/BPU.scala:35:65
    .R1_en   (1'h1),	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    .R1_clk  (clock),
    .R1_data (_pht_ext_R1_data),
    .W0_addr (phtResetState ? phtResetIdx : reqLatch_pc[10:2]),	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:35:65, :339:30, :400:25, :404:19
    .W0_en
      (phtResetState | reqLatch_valid & ~(reqLatch_fuOpType[3])
       & (reqLatch_actualTaken & cnt != 2'h3 | ~reqLatch_actualTaken & (|cnt))),	// src/main/scala/nutcore/backend/fu/ALU.scala:63:{30,35}, src/main/scala/nutcore/frontend/BPU.scala:335:94, :339:30, :399:20, :400:25, :403:{23,31,45,49,56,64}, :406:{34,94}
    .W0_clk  (clock),
    .W0_data (phtResetState ? 2'h0 : reqLatch_actualTaken ? cnt + 2'h1 : cnt - 2'h1)	// src/main/scala/nutcore/frontend/BPU.scala:335:94, :339:30, :399:20, :400:25, :402:{19,31,42}, :405:21
  );
  ras_16x39 ras_ext (	// src/main/scala/nutcore/frontend/BPU.scala:353:16
    .R0_addr (sp_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/nutcore/frontend/BPU.scala:280:7
    .R0_clk  (clock),
    .R0_data (_ras_ext_R0_data),
    .W0_addr (rasResetState ? rasResetIdx : _value_T),	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/nutcore/frontend/BPU.scala:349:30, :409:{19,57}
    .W0_en   (rasResetState | req__bore_valid & _rasWen_T),	// src/main/scala/nutcore/frontend/BPU.scala:349:30, :411:{30,44,61}
    .W0_clk  (clock),
    .W0_data
      (rasResetState ? 39'h0 : req__bore_pc + {36'h0, req__bore_isRVC ? 3'h2 : 3'h4})	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :349:30, :359:34, :410:{21,49,54}
  );
  assign io_out_target = io_out_target_0;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :418:23
  assign io_out_valid = io_out_valid_0;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :422:26
  assign io_brIdx = _GEN & _btb_io_rresp_data_0_brIdx;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :302:19, :335:74, :421:30
  assign io_crosslineJump = crosslineJump;	// src/main/scala/nutcore/frontend/BPU.scala:280:7, :330:40
endmodule

