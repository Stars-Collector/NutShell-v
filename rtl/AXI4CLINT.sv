// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXI4CLINT(	// src/main/scala/device/AXI4CLINT.scala:31:7
  input         clock,	// src/main/scala/device/AXI4CLINT.scala:31:7
                reset,	// src/main/scala/device/AXI4CLINT.scala:31:7
  output        io_in_awready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_awvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [31:0] io_in_awaddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_wready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_wvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [63:0] io_in_wdata,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [7:0]  io_in_wstrb,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_bready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_bvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
                io_in_arready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_arvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [31:0] io_in_araddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_rready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_rvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [63:0] io_in_rdata,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_mtip,	// src/main/scala/device/AXI4Slave.scala:28:14
                io_extra_msip,	// src/main/scala/device/AXI4Slave.scala:28:14
                io_extra_mtip__bore,
  input         isWFI__bore,
  output        io_extra_msip__bore
);

  reg         r_busy;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        io_in_arready_0 = io_in_rready | ~r_busy;	// src/main/scala/device/AXI4Slave.scala:71:{29,32}, src/main/scala/utils/StopWatch.scala:24:20
  reg         ren_REG;	// src/main/scala/device/AXI4Slave.scala:73:17
  reg         io_in_rvalid_r;	// src/main/scala/utils/StopWatch.scala:24:20
  reg         w_busy;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        io_in_wready_0 = io_in_awvalid | w_busy;	// src/main/scala/device/AXI4Slave.scala:95:30, src/main/scala/utils/StopWatch.scala:24:20
  reg         io_in_bvalid_r;	// src/main/scala/utils/StopWatch.scala:24:20
  reg  [63:0] mtime;	// src/main/scala/device/AXI4CLINT.scala:32:22
  reg  [63:0] mtimecmp;	// src/main/scala/device/AXI4CLINT.scala:33:25
  reg  [63:0] msip;	// src/main/scala/device/AXI4CLINT.scala:34:21
  reg  [63:0] freq_reg;	// src/main/scala/device/AXI4CLINT.scala:37:25
  reg  [63:0] inc_reg;	// src/main/scala/device/AXI4CLINT.scala:39:24
  reg  [15:0] cnt;	// src/main/scala/device/AXI4CLINT.scala:42:20
  reg         io_extra_mtip_REG;	// src/main/scala/device/AXI4CLINT.scala:66:31
  reg         io_extra_msip_REG;	// src/main/scala/device/AXI4CLINT.scala:67:31
  always @(posedge clock) begin	// src/main/scala/device/AXI4CLINT.scala:31:7
    if (reset) begin	// src/main/scala/device/AXI4CLINT.scala:31:7
      r_busy <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      ren_REG <= 1'h0;	// src/main/scala/device/AXI4Slave.scala:73:17, src/main/scala/utils/StopWatch.scala:24:20
      io_in_rvalid_r <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      w_busy <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      io_in_bvalid_r <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      mtime <= 64'h0;	// src/main/scala/device/AXI4CLINT.scala:32:22
      mtimecmp <= 64'h0;	// src/main/scala/device/AXI4CLINT.scala:32:22, :33:25
      msip <= 64'h0;	// src/main/scala/device/AXI4CLINT.scala:32:22, :34:21
      freq_reg <= 64'h2710;	// src/main/scala/device/AXI4CLINT.scala:37:25
      inc_reg <= 64'h1;	// src/main/scala/device/AXI4CLINT.scala:39:24
      cnt <= 16'h0;	// src/main/scala/device/AXI4CLINT.scala:42:20
    end
    else begin	// src/main/scala/device/AXI4CLINT.scala:31:7
      automatic logic        _io_in_rvalid_T = io_in_arready_0 & io_in_arvalid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:71:29
      automatic logic        _io_in_rvalid_T_3;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic        _io_in_bvalid_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic        _io_in_bvalid_T_1 = io_in_wready_0 & io_in_wvalid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:95:30
      automatic logic [15:0] _nextCnt_T;	// src/main/scala/device/AXI4CLINT.scala:43:21
      automatic logic [63:0] _GEN;	// src/main/scala/utils/BitUtils.scala:27:26
      _io_in_rvalid_T_3 = io_in_rready & io_in_rvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20
      _io_in_bvalid_T_2 = io_in_bready & io_in_bvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20
      _nextCnt_T = cnt + 16'h1;	// src/main/scala/device/AXI4CLINT.scala:42:20, :43:21
      _GEN =
        {{8{io_in_wstrb[7]}},
         {8{io_in_wstrb[6]}},
         {8{io_in_wstrb[5]}},
         {8{io_in_wstrb[4]}},
         {8{io_in_wstrb[3]}},
         {8{io_in_wstrb[2]}},
         {8{io_in_wstrb[1]}},
         {8{io_in_wstrb[0]}}};	// src/main/scala/utils/BitUtils.scala:27:{26,29,45}
      r_busy <= _io_in_rvalid_T | ~_io_in_rvalid_T_3 & r_busy;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      ren_REG <= _io_in_rvalid_T;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:73:17
      io_in_rvalid_r <=
        ren_REG & (_io_in_rvalid_T | r_busy) | ~_io_in_rvalid_T_3 & io_in_rvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:73:17, :74:{35,50}, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      w_busy <= ~w_busy & io_in_awvalid | ~_io_in_bvalid_T_2 & w_busy;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:94:18, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      io_in_bvalid_r <= _io_in_bvalid_T_1 | ~_io_in_bvalid_T_2 & io_in_bvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      if (_io_in_bvalid_T_1 & io_in_awaddr[15:0] == 16'hBFF8)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4CLINT.scala:61:35, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
        mtime <= io_in_wdata & _GEN | mtime & ~_GEN;	// src/main/scala/device/AXI4CLINT.scala:32:22, src/main/scala/utils/BitUtils.scala:27:26, :34:{14,26,37,39}
      else if (isWFI__bore)
        mtime <= mtime + 64'h186A0;	// src/main/scala/device/AXI4CLINT.scala:32:22, :51:35
      else if (_nextCnt_T == freq_reg[15:0])	// src/main/scala/device/AXI4CLINT.scala:37:25, :38:22, :43:21, :45:23
        mtime <= mtime + {48'h0, inc_reg[15:0]};	// src/main/scala/device/AXI4CLINT.scala:32:22, :39:24, :40:20, :46:32
      if (_io_in_bvalid_T_1 & io_in_awaddr[15:0] == 16'h4000)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4CLINT.scala:61:35, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
        mtimecmp <= io_in_wdata & _GEN | mtimecmp & ~_GEN;	// src/main/scala/device/AXI4CLINT.scala:33:25, src/main/scala/utils/BitUtils.scala:27:26, :34:{14,26,37,39}
      if (_io_in_bvalid_T_1 & io_in_awaddr[15:0] == 16'h0)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4CLINT.scala:42:20, :61:35, src/main/scala/utils/RegMap.scala:32:{32,41}
        msip <= io_in_wdata & _GEN | msip & ~_GEN;	// src/main/scala/device/AXI4CLINT.scala:34:21, src/main/scala/utils/BitUtils.scala:27:26, :34:{14,26,37,39}
      if (_io_in_bvalid_T_1 & io_in_awaddr[15:0] == 16'h8000)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4CLINT.scala:61:35, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
        freq_reg <= io_in_wdata & _GEN | freq_reg & ~_GEN;	// src/main/scala/device/AXI4CLINT.scala:37:25, src/main/scala/utils/BitUtils.scala:27:26, :34:{14,26,37,39}
      if (_io_in_bvalid_T_1 & io_in_awaddr[15:0] == 16'h8008)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4CLINT.scala:61:35, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
        inc_reg <= io_in_wdata & _GEN | inc_reg & ~_GEN;	// src/main/scala/device/AXI4CLINT.scala:39:24, src/main/scala/utils/BitUtils.scala:27:26, :34:{14,26,37,39}
      if (_nextCnt_T < freq_reg[15:0])	// src/main/scala/device/AXI4CLINT.scala:37:25, :38:22, :43:21, :44:22
        cnt <= _nextCnt_T;	// src/main/scala/device/AXI4CLINT.scala:42:20, :43:21
      else	// src/main/scala/device/AXI4CLINT.scala:44:22
        cnt <= 16'h0;	// src/main/scala/device/AXI4CLINT.scala:42:20
    end
    io_extra_mtip_REG <= mtime >= mtimecmp;	// src/main/scala/device/AXI4CLINT.scala:32:22, :33:25, :66:{31,38}
    io_extra_msip_REG <= |msip;	// src/main/scala/device/AXI4CLINT.scala:34:21, :67:{31,37}
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/device/AXI4CLINT.scala:31:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/device/AXI4CLINT.scala:31:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/device/AXI4CLINT.scala:31:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/device/AXI4CLINT.scala:31:7
      automatic logic [31:0] _RANDOM[0:10];	// src/main/scala/device/AXI4CLINT.scala:31:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/device/AXI4CLINT.scala:31:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/device/AXI4CLINT.scala:31:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/device/AXI4CLINT.scala:31:7
        for (logic [3:0] i = 4'h0; i < 4'hB; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/device/AXI4CLINT.scala:31:7
        end	// src/main/scala/device/AXI4CLINT.scala:31:7
        r_busy = _RANDOM[4'h0][0];	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
        ren_REG = _RANDOM[4'h0][1];	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/device/AXI4Slave.scala:73:17, src/main/scala/utils/StopWatch.scala:24:20
        io_in_rvalid_r = _RANDOM[4'h0][2];	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
        w_busy = _RANDOM[4'h0][3];	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
        io_in_bvalid_r = _RANDOM[4'h0][4];	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
        mtime = {_RANDOM[4'h0][31:5], _RANDOM[4'h1], _RANDOM[4'h2][4:0]};	// src/main/scala/device/AXI4CLINT.scala:31:7, :32:22, src/main/scala/utils/StopWatch.scala:24:20
        mtimecmp = {_RANDOM[4'h2][31:5], _RANDOM[4'h3], _RANDOM[4'h4][4:0]};	// src/main/scala/device/AXI4CLINT.scala:31:7, :32:22, :33:25
        msip = {_RANDOM[4'h4][31:5], _RANDOM[4'h5], _RANDOM[4'h6][4:0]};	// src/main/scala/device/AXI4CLINT.scala:31:7, :33:25, :34:21
        freq_reg = {_RANDOM[4'h6][31:5], _RANDOM[4'h7], _RANDOM[4'h8][4:0]};	// src/main/scala/device/AXI4CLINT.scala:31:7, :34:21, :37:25
        inc_reg = {_RANDOM[4'h8][31:5], _RANDOM[4'h9], _RANDOM[4'hA][4:0]};	// src/main/scala/device/AXI4CLINT.scala:31:7, :37:25, :39:24
        cnt = _RANDOM[4'hA][20:5];	// src/main/scala/device/AXI4CLINT.scala:31:7, :39:24, :42:20
        io_extra_mtip_REG = _RANDOM[4'hA][21];	// src/main/scala/device/AXI4CLINT.scala:31:7, :39:24, :66:31
        io_extra_msip_REG = _RANDOM[4'hA][22];	// src/main/scala/device/AXI4CLINT.scala:31:7, :39:24, :67:31
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/device/AXI4CLINT.scala:31:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/device/AXI4CLINT.scala:31:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_awready = ~w_busy;	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/device/AXI4Slave.scala:94:18, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_wready = io_in_wready_0;	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/device/AXI4Slave.scala:95:30
  assign io_in_bvalid = io_in_bvalid_r;	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_arready = io_in_arready_0;	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/device/AXI4Slave.scala:71:29
  assign io_in_rvalid = io_in_rvalid_r;	// src/main/scala/device/AXI4CLINT.scala:31:7, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_rdata =
    (io_in_araddr[15:0] == 16'h0 ? msip : 64'h0)
    | (io_in_araddr[15:0] == 16'h8000 ? freq_reg : 64'h0)
    | (io_in_araddr[15:0] == 16'hBFF8 ? mtime : 64'h0)
    | (io_in_araddr[15:0] == 16'h8008 ? inc_reg : 64'h0)
    | (io_in_araddr[15:0] == 16'h4000 ? mtimecmp : 64'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, src/main/scala/device/AXI4CLINT.scala:31:7, :32:22, :33:25, :34:21, :37:25, :39:24, :42:20, :61:35, src/main/scala/utils/LookupTree.scala:24:34
  assign io_extra_mtip = io_extra_mtip_REG;	// src/main/scala/device/AXI4CLINT.scala:31:7, :66:31
  assign io_extra_msip = io_extra_msip_REG;	// src/main/scala/device/AXI4CLINT.scala:31:7, :67:31
  assign io_extra_mtip__bore = io_extra_mtip_REG;	// src/main/scala/device/AXI4CLINT.scala:31:7, :66:31
  assign io_extra_msip__bore = io_extra_msip_REG;	// src/main/scala/device/AXI4CLINT.scala:31:7, :67:31
endmodule

