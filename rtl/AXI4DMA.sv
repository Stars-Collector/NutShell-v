// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXI4DMA(	// src/main/scala/device/AXI4DMA.scala:29:7
  input         clock,	// src/main/scala/device/AXI4DMA.scala:29:7
                reset,	// src/main/scala/device/AXI4DMA.scala:29:7
  output        io_in_awready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_awvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [31:0] io_in_awaddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_wready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_wvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [63:0] io_in_wdata,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [7:0]  io_in_wstrb,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_bready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_bvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
                io_in_arready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_arvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [31:0] io_in_araddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_in_rready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_in_rvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [63:0] io_in_rdata,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_extra_dma_awready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_dma_awvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [31:0] io_extra_dma_awaddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_extra_dma_wready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_dma_wvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [63:0] io_extra_dma_wdata,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [7:0]  io_extra_dma_wstrb,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_dma_bready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_extra_dma_bvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
                io_extra_dma_arready,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_dma_arvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  output [31:0] io_extra_dma_araddr,	// src/main/scala/device/AXI4Slave.scala:28:14
  output        io_extra_dma_rready,	// src/main/scala/device/AXI4Slave.scala:28:14
  input         io_extra_dma_rvalid,	// src/main/scala/device/AXI4Slave.scala:28:14
  input  [63:0] io_extra_dma_rdata	// src/main/scala/device/AXI4Slave.scala:28:14
);

  wire        io_extra_dma_wvalid_0;	// src/main/scala/device/AXI4DMA.scala:89:42
  wire        io_extra_dma_awvalid_0;	// src/main/scala/device/AXI4DMA.scala:88:43
  reg         r_busy;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        io_in_arready_0 = io_in_rready | ~r_busy;	// src/main/scala/device/AXI4Slave.scala:71:{29,32}, src/main/scala/utils/StopWatch.scala:24:20
  reg         ren_REG;	// src/main/scala/device/AXI4Slave.scala:73:17
  reg         io_in_rvalid_r;	// src/main/scala/utils/StopWatch.scala:24:20
  reg         w_busy;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        io_in_wready_0 = io_in_awvalid | w_busy;	// src/main/scala/device/AXI4Slave.scala:95:30, src/main/scala/utils/StopWatch.scala:24:20
  reg         io_in_bvalid_r;	// src/main/scala/utils/StopWatch.scala:24:20
  reg  [31:0] dest;	// src/main/scala/device/AXI4DMA.scala:34:17
  reg  [31:0] src;	// src/main/scala/device/AXI4DMA.scala:35:16
  reg  [31:0] len;	// src/main/scala/device/AXI4DMA.scala:36:20
  reg  [31:0] data;	// src/main/scala/device/AXI4DMA.scala:39:17
  reg  [2:0]  state;	// src/main/scala/device/AXI4DMA.scala:42:22
  wire        io_extra_dma_arvalid_0 = state == 3'h1;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22, :53:15
  wire        io_extra_dma_rready_0 = state == 3'h2;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22, :54:15
  wire        _wSend_T = io_extra_dma_awready & io_extra_dma_awvalid_0;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:88:43
  reg         awAck;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        _wSend_T_1 = io_extra_dma_wready & io_extra_dma_wvalid_0;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:89:42
  reg         wAck;	// src/main/scala/utils/StopWatch.scala:24:20
  wire        wSend = _wSend_T & _wSend_T_1 | awAck & wAck;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:63:{25,49,59}, src/main/scala/utils/StopWatch.scala:24:20
  wire        _io_extra_dma_wvalid_T = state == 3'h3;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22, :65:15
  wire        io_extra_dma_bready_0 = state == 3'h4;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22, :66:15
  assign io_extra_dma_awvalid_0 = _io_extra_dma_wvalid_T & ~awAck;	// src/main/scala/device/AXI4DMA.scala:65:15, :88:{43,46}, src/main/scala/utils/StopWatch.scala:24:20
  assign io_extra_dma_wvalid_0 = _io_extra_dma_wvalid_T & ~wAck;	// src/main/scala/device/AXI4DMA.scala:65:15, :89:{42,45}, src/main/scala/utils/StopWatch.scala:24:20
  wire [18:0] _io_extra_dma_wstrb_T_3 = 19'hF << {16'h0, dest[2], 2'h0};	// src/main/scala/device/AXI4DMA.scala:34:17, :70:17, :91:{41,49}
  always @(posedge clock) begin	// src/main/scala/device/AXI4DMA.scala:29:7
    automatic logic        _io_in_bvalid_T_1;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    automatic logic        _GEN;	// src/main/scala/device/AXI4DMA.scala:54:36
    automatic logic        _GEN_0;	// src/main/scala/device/AXI4DMA.scala:66:37
    automatic logic [7:0]  _GEN_1 = io_in_wstrb >> io_in_awaddr[2:0];	// src/main/scala/device/AXI4DMA.scala:102:{77,85}
    automatic logic [31:0] _GEN_2;	// src/main/scala/device/AXI4DMA.scala:102:92
    _io_in_bvalid_T_1 = io_in_wready_0 & io_in_wvalid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:95:30
    _GEN = io_extra_dma_rready_0 & io_extra_dma_rvalid;	// src/main/scala/device/AXI4DMA.scala:54:{15,36}
    _GEN_0 = io_extra_dma_bready_0 & io_extra_dma_bvalid;	// src/main/scala/device/AXI4DMA.scala:66:{15,37}
    _GEN_2 = {{8{_GEN_1[3]}}, {8{_GEN_1[2]}}, {8{_GEN_1[1]}}, {8{_GEN_1[0]}}};	// src/main/scala/device/AXI4DMA.scala:102:{77,92}, src/main/scala/utils/BitUtils.scala:27:{29,45}
    if (reset) begin	// src/main/scala/device/AXI4DMA.scala:29:7
      r_busy <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      ren_REG <= 1'h0;	// src/main/scala/device/AXI4Slave.scala:73:17, src/main/scala/utils/StopWatch.scala:24:20
      io_in_rvalid_r <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      w_busy <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      io_in_bvalid_r <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      len <= 32'h0;	// src/main/scala/device/AXI4DMA.scala:36:20
      state <= 3'h0;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22
      awAck <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
      wAck <= 1'h0;	// src/main/scala/utils/StopWatch.scala:24:20
    end
    else begin	// src/main/scala/device/AXI4DMA.scala:29:7
      automatic logic _io_in_rvalid_T = io_in_arready_0 & io_in_arvalid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:71:29
      automatic logic _io_in_rvalid_T_3;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      automatic logic _io_in_bvalid_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      _io_in_rvalid_T_3 = io_in_rready & io_in_rvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20
      _io_in_bvalid_T_2 = io_in_bready & io_in_bvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20
      r_busy <= _io_in_rvalid_T | ~_io_in_rvalid_T_3 & r_busy;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      ren_REG <= _io_in_rvalid_T;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:73:17
      io_in_rvalid_r <=
        ren_REG & (_io_in_rvalid_T | r_busy) | ~_io_in_rvalid_T_3 & io_in_rvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:73:17, :74:{35,50}, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      w_busy <= ~w_busy & io_in_awvalid | ~_io_in_bvalid_T_2 & w_busy;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4Slave.scala:94:18, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      io_in_bvalid_r <= _io_in_bvalid_T_1 | ~_io_in_bvalid_T_2 & io_in_bvalid_r;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/utils/StopWatch.scala:24:20, :26:{19,23}, :27:{20,24}
      if (_io_in_bvalid_T_1 & io_in_awaddr[3:0] == 4'h8)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:102:10, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
        len <= io_in_wdata[31:0] & _GEN_2 | len & ~_GEN_2;	// src/main/scala/device/AXI4DMA.scala:36:20, :102:{42,92}, src/main/scala/utils/BitUtils.scala:34:{14,26,37,39}
      else if (_GEN_0)	// src/main/scala/device/AXI4DMA.scala:66:37
        len <= len - 32'h4;	// src/main/scala/device/AXI4DMA.scala:36:20, :67:16
      if (_GEN_0)	// src/main/scala/device/AXI4DMA.scala:66:37
        state <= {2'h0, len > 32'h4};	// src/main/scala/device/AXI4DMA.scala:36:20, :42:22, :70:{17,22}
      else if (_io_extra_dma_wvalid_T & wSend)	// src/main/scala/device/AXI4DMA.scala:63:49, :65:{15,31}
        state <= 3'h4;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22
      else if (_GEN)	// src/main/scala/device/AXI4DMA.scala:54:36
        state <= 3'h3;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22
      else if (io_extra_dma_arvalid_0 & io_extra_dma_arready)	// src/main/scala/device/AXI4DMA.scala:53:{15,30}
        state <= 3'h2;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22
      else if (state == 3'h0 & (|len))	// src/main/scala/device/AXI4DMA.scala:29:7, :36:20, :42:22, :52:{15,26,33}
        state <= 3'h1;	// src/main/scala/device/AXI4DMA.scala:29:7, :42:22
      awAck <= ~wSend & (_wSend_T | awAck);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:63:49, src/main/scala/utils/StopWatch.scala:24:20, :30:{20,24}, :31:{19,23}
      wAck <= ~wSend & (_wSend_T_1 | wAck);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:63:49, src/main/scala/utils/StopWatch.scala:24:20, :30:{20,24}, :31:{19,23}
    end
    if (_io_in_bvalid_T_1 & io_in_awaddr[3:0] == 4'h0)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:102:10, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:32:{32,41}
      dest <= io_in_wdata[31:0] & _GEN_2 | dest & ~_GEN_2;	// src/main/scala/device/AXI4DMA.scala:34:17, :102:{42,92}, src/main/scala/utils/BitUtils.scala:34:{14,26,37,39}
    else if (_GEN_0)	// src/main/scala/device/AXI4DMA.scala:66:37
      dest <= dest + 32'h4;	// src/main/scala/device/AXI4DMA.scala:34:17, :68:18, :70:22
    if (_io_in_bvalid_T_1 & io_in_awaddr[3:0] == 4'h4)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/device/AXI4DMA.scala:91:68, :102:10, src/main/scala/utils/RegMap.scala:32:{32,41}
      src <= io_in_wdata[31:0] & _GEN_2 | src & ~_GEN_2;	// src/main/scala/device/AXI4DMA.scala:35:16, :102:{42,92}, src/main/scala/utils/BitUtils.scala:34:{14,26,37,39}
    else if (_GEN_0)	// src/main/scala/device/AXI4DMA.scala:66:37
      src <= src + 32'h4;	// src/main/scala/device/AXI4DMA.scala:35:16, :69:16, :70:22
    if (_GEN)	// src/main/scala/device/AXI4DMA.scala:54:36
      data <= src[2] ? io_extra_dma_rdata[63:32] : io_extra_dma_rdata[31:0];	// src/main/scala/device/AXI4DMA.scala:35:16, :39:17, :55:{10,37,74}
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/device/AXI4DMA.scala:29:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/device/AXI4DMA.scala:29:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/device/AXI4DMA.scala:29:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/device/AXI4DMA.scala:29:7
      automatic logic [31:0] _RANDOM[0:4];	// src/main/scala/device/AXI4DMA.scala:29:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/device/AXI4DMA.scala:29:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/device/AXI4DMA.scala:29:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/device/AXI4DMA.scala:29:7
        for (logic [2:0] i = 3'h0; i < 3'h5; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/device/AXI4DMA.scala:29:7
        end	// src/main/scala/device/AXI4DMA.scala:29:7
        r_busy = _RANDOM[3'h0][0];	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
        ren_REG = _RANDOM[3'h0][1];	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/device/AXI4Slave.scala:73:17, src/main/scala/utils/StopWatch.scala:24:20
        io_in_rvalid_r = _RANDOM[3'h0][2];	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
        w_busy = _RANDOM[3'h0][3];	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
        io_in_bvalid_r = _RANDOM[3'h0][4];	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
        dest = {_RANDOM[3'h0][31:5], _RANDOM[3'h1][4:0]};	// src/main/scala/device/AXI4DMA.scala:29:7, :34:17, src/main/scala/utils/StopWatch.scala:24:20
        src = {_RANDOM[3'h1][31:5], _RANDOM[3'h2][4:0]};	// src/main/scala/device/AXI4DMA.scala:29:7, :34:17, :35:16
        len = {_RANDOM[3'h2][31:5], _RANDOM[3'h3][4:0]};	// src/main/scala/device/AXI4DMA.scala:29:7, :35:16, :36:20
        data = {_RANDOM[3'h3][31:5], _RANDOM[3'h4][4:0]};	// src/main/scala/device/AXI4DMA.scala:29:7, :36:20, :39:17
        state = _RANDOM[3'h4][7:5];	// src/main/scala/device/AXI4DMA.scala:29:7, :39:17, :42:22
        awAck = _RANDOM[3'h4][8];	// src/main/scala/device/AXI4DMA.scala:29:7, :39:17, src/main/scala/utils/StopWatch.scala:24:20
        wAck = _RANDOM[3'h4][9];	// src/main/scala/device/AXI4DMA.scala:29:7, :39:17, src/main/scala/utils/StopWatch.scala:24:20
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/device/AXI4DMA.scala:29:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/device/AXI4DMA.scala:29:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_awready = ~w_busy;	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/device/AXI4Slave.scala:94:18, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_wready = io_in_wready_0;	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/device/AXI4Slave.scala:95:30
  assign io_in_bvalid = io_in_bvalid_r;	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_arready = io_in_arready_0;	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/device/AXI4Slave.scala:71:29
  assign io_in_rvalid = io_in_rvalid_r;	// src/main/scala/device/AXI4DMA.scala:29:7, src/main/scala/utils/StopWatch.scala:24:20
  assign io_in_rdata =
    {32'h0,
     (io_in_araddr[3:0] == 4'h0 ? dest : 32'h0)
       | (io_in_araddr[3:0] == 4'h4 ? src : 32'h0)
       | (io_in_araddr[3:0] == 4'h8 ? len : 32'h0)};	// src/main/scala/chisel3/util/Mux.scala:30:73, src/main/scala/device/AXI4DMA.scala:29:7, :34:17, :35:16, :36:20, :91:68, :101:33, src/main/scala/utils/LookupTree.scala:24:34, src/main/scala/utils/RegMap.scala:30:11
  assign io_extra_dma_awvalid = io_extra_dma_awvalid_0;	// src/main/scala/device/AXI4DMA.scala:29:7, :88:43
  assign io_extra_dma_awaddr = dest;	// src/main/scala/device/AXI4DMA.scala:29:7, :34:17
  assign io_extra_dma_wvalid = io_extra_dma_wvalid_0;	// src/main/scala/device/AXI4DMA.scala:29:7, :89:42
  assign io_extra_dma_wdata = {2{data}};	// src/main/scala/device/AXI4DMA.scala:29:7, :39:17, :90:26
  assign io_extra_dma_wstrb = _io_extra_dma_wstrb_T_3[7:0];	// src/main/scala/device/AXI4DMA.scala:29:7, :91:{19,41}
  assign io_extra_dma_bready = io_extra_dma_bready_0;	// src/main/scala/device/AXI4DMA.scala:29:7, :66:15
  assign io_extra_dma_arvalid = io_extra_dma_arvalid_0;	// src/main/scala/device/AXI4DMA.scala:29:7, :53:15
  assign io_extra_dma_araddr = src;	// src/main/scala/device/AXI4DMA.scala:29:7, :35:16
  assign io_extra_dma_rready = io_extra_dma_rready_0;	// src/main/scala/device/AXI4DMA.scala:29:7, :54:15
endmodule

