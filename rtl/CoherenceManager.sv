// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module CoherenceManager(	// src/main/scala/system/Coherence.scala:30:7
  input         clock,	// src/main/scala/system/Coherence.scala:30:7
                reset,	// src/main/scala/system/Coherence.scala:30:7
  output        io_in_req_ready,	// src/main/scala/system/Coherence.scala:31:14
  input         io_in_req_valid,	// src/main/scala/system/Coherence.scala:31:14
  input  [31:0] io_in_req_bits_addr,	// src/main/scala/system/Coherence.scala:31:14
  input  [3:0]  io_in_req_bits_cmd,	// src/main/scala/system/Coherence.scala:31:14
  input  [63:0] io_in_req_bits_wdata,	// src/main/scala/system/Coherence.scala:31:14
  output        io_in_resp_valid,	// src/main/scala/system/Coherence.scala:31:14
  output [3:0]  io_in_resp_bits_cmd,	// src/main/scala/system/Coherence.scala:31:14
  output [63:0] io_in_resp_bits_rdata,	// src/main/scala/system/Coherence.scala:31:14
  input         io_out_mem_req_ready,	// src/main/scala/system/Coherence.scala:31:14
  output        io_out_mem_req_valid,	// src/main/scala/system/Coherence.scala:31:14
  output [31:0] io_out_mem_req_bits_addr,	// src/main/scala/system/Coherence.scala:31:14
  output [3:0]  io_out_mem_req_bits_cmd,	// src/main/scala/system/Coherence.scala:31:14
  output [63:0] io_out_mem_req_bits_wdata,	// src/main/scala/system/Coherence.scala:31:14
  input         io_out_mem_resp_valid,	// src/main/scala/system/Coherence.scala:31:14
  input  [3:0]  io_out_mem_resp_bits_cmd,	// src/main/scala/system/Coherence.scala:31:14
  input  [63:0] io_out_mem_resp_bits_rdata,	// src/main/scala/system/Coherence.scala:31:14
  input         io_out_coh_req_ready,	// src/main/scala/system/Coherence.scala:31:14
  output        io_out_coh_req_valid,	// src/main/scala/system/Coherence.scala:31:14
  output [31:0] io_out_coh_req_bits_addr,	// src/main/scala/system/Coherence.scala:31:14
  output [63:0] io_out_coh_req_bits_wdata,	// src/main/scala/system/Coherence.scala:31:14
  input         io_out_coh_resp_valid,	// src/main/scala/system/Coherence.scala:31:14
  input  [3:0]  io_out_coh_resp_bits_cmd,	// src/main/scala/system/Coherence.scala:31:14
  input  [63:0] io_out_coh_resp_bits_rdata	// src/main/scala/system/Coherence.scala:31:14
);

  reg  [2:0]  state;	// src/main/scala/system/Coherence.scala:45:22
  wire        _GEN = ~(io_in_req_bits_cmd[0]) & ~(io_in_req_bits_cmd[3]);	// src/main/scala/bus/simplebus/SimpleBus.scala:73:{18,22,26,29,33}
  `ifndef SYNTHESIS	// src/main/scala/system/Coherence.scala:49:9
    always @(posedge clock) begin	// src/main/scala/system/Coherence.scala:49:9
      if (~reset & io_in_req_valid & ~_GEN & ~(io_in_req_bits_cmd[0])) begin	// src/main/scala/bus/simplebus/SimpleBus.scala:73:{18,22,26}, src/main/scala/system/Coherence.scala:49:{9,29}
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/system/Coherence.scala:49:9
          $error("Assertion failed\n    at Coherence.scala:49 assert(!(thisReq.valid && !thisReq.bits.isRead() && !thisReq.bits.isWrite()))\n");	// src/main/scala/system/Coherence.scala:49:9
        if (`STOP_COND_)	// src/main/scala/system/Coherence.scala:49:9
          $fatal;	// src/main/scala/system/Coherence.scala:49:9
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire        _io_in_req_ready_T_2 = state == 3'h0;	// src/main/scala/system/Coherence.scala:30:7, :45:22, :46:24
  reg  [31:0] reqLatch_addr;	// src/main/scala/system/Coherence.scala:52:27
  reg  [3:0]  reqLatch_cmd;	// src/main/scala/system/Coherence.scala:52:27
  reg  [63:0] reqLatch_wdata;	// src/main/scala/system/Coherence.scala:52:27
  wire        io_in_req_ready_0 =
    io_in_req_bits_cmd[0]
      ? io_out_mem_req_ready & _io_in_req_ready_T_2
      : _GEN & io_out_coh_req_ready & _io_in_req_ready_T_2;	// src/main/scala/bus/simplebus/SimpleBus.scala:73:{22,26}, src/main/scala/system/Coherence.scala:46:24, :62:17, :64:61, :66:{19,43}, :67:39, :69:19
  wire        _GEN_0 = state == 3'h0;	// src/main/scala/system/Coherence.scala:30:7, :45:22, :74:18
  wire        _GEN_1 = state == 3'h1;	// src/main/scala/system/Coherence.scala:30:7, :45:22, :74:18
  wire        _GEN_2 = state == 3'h2;	// src/main/scala/system/Coherence.scala:45:22, :74:18, :83:21
  wire        _GEN_3 = _GEN_0 | _GEN_1 | ~_GEN_2;	// src/main/scala/system/Coherence.scala:72:14, :74:18
  wire        io_in_resp_valid_0 = _GEN_3 ? io_out_mem_resp_valid : io_out_coh_resp_valid;	// src/main/scala/system/Coherence.scala:72:14, :74:18
  wire [3:0]  io_in_resp_bits_cmd_0 =
    _GEN_3 ? io_out_mem_resp_bits_cmd : io_out_coh_resp_bits_cmd;	// src/main/scala/system/Coherence.scala:72:14, :74:18
  wire        _GEN_4 = state == 3'h3;	// src/main/scala/system/Coherence.scala:31:14, :45:22, :74:18
  wire        _GEN_5 = _GEN_0 | _GEN_1 | _GEN_2;	// src/main/scala/system/Coherence.scala:59:23, :74:18
  wire        _GEN_6 = _GEN_5 | ~_GEN_4;	// src/main/scala/system/Coherence.scala:59:23, :74:18
  wire        io_out_mem_req_valid_0 =
    ~_GEN_5 & _GEN_4 | io_in_req_bits_cmd[0] & io_in_req_valid & _io_in_req_ready_T_2;	// src/main/scala/bus/simplebus/SimpleBus.scala:73:22, src/main/scala/system/Coherence.scala:46:24, :59:23, :61:24, :64:61, :65:26, :74:18
  always @(posedge clock) begin	// src/main/scala/system/Coherence.scala:30:7
    if (reset)	// src/main/scala/system/Coherence.scala:30:7
      state <= 3'h0;	// src/main/scala/system/Coherence.scala:30:7, :45:22
    else if (_GEN_0) begin	// src/main/scala/system/Coherence.scala:74:18
      if (io_in_req_ready_0 & io_in_req_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/system/Coherence.scala:64:61, :66:19, :67:39
        if (_GEN)	// src/main/scala/bus/simplebus/SimpleBus.scala:73:26
          state <= 3'h1;	// src/main/scala/system/Coherence.scala:30:7, :45:22
        else if (io_in_req_bits_cmd == 4'h7)	// src/main/scala/bus/simplebus/SimpleBus.scala:78:27
          state <= 3'h5;	// src/main/scala/system/Coherence.scala:45:22, :78:56
      end
    end
    else if (_GEN_1) begin	// src/main/scala/system/Coherence.scala:74:18
      if (io_out_coh_resp_valid)	// src/main/scala/system/Coherence.scala:31:14
        state <= {2'h1, io_out_coh_resp_bits_cmd != 4'hC};	// src/main/scala/bus/simplebus/SimpleBus.scala:92:24, src/main/scala/system/Coherence.scala:30:7, :45:22, :83:21
    end
    else if (_GEN_2) begin	// src/main/scala/system/Coherence.scala:74:18
      if (io_in_resp_valid_0 & io_in_resp_bits_cmd_0 == 4'h6)	// src/main/scala/bus/simplebus/SimpleBus.scala:91:24, src/main/scala/system/Coherence.scala:72:14, :74:18, :89:27
        state <= 3'h0;	// src/main/scala/system/Coherence.scala:30:7, :45:22
    end
    else if (_GEN_4) begin	// src/main/scala/system/Coherence.scala:74:18
      if (io_out_mem_req_ready & io_out_mem_req_valid_0)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/system/Coherence.scala:64:61, :74:18
        state <= 3'h4;	// src/main/scala/system/Coherence.scala:30:7, :45:22
    end
    else if (state == 3'h4
               ? io_out_mem_resp_valid & io_out_mem_resp_bits_cmd == 4'h6
               : state == 3'h5 & io_out_mem_resp_valid)	// src/main/scala/bus/simplebus/SimpleBus.scala:91:24, src/main/scala/system/Coherence.scala:30:7, :45:22, :74:18, :78:56, :96:{53,89,97}, :97:{55,63}
      state <= 3'h0;	// src/main/scala/system/Coherence.scala:30:7, :45:22
    if (_io_in_req_ready_T_2 & ~(io_in_req_bits_cmd[0]) & ~(io_in_req_bits_cmd[3])) begin	// src/main/scala/bus/simplebus/SimpleBus.scala:73:{18,22,29,33}, src/main/scala/system/Coherence.scala:46:24, :52:52
      reqLatch_addr <= io_in_req_bits_addr;	// src/main/scala/system/Coherence.scala:52:27
      reqLatch_cmd <= io_in_req_bits_cmd;	// src/main/scala/system/Coherence.scala:52:27
      reqLatch_wdata <= io_in_req_bits_wdata;	// src/main/scala/system/Coherence.scala:52:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/system/Coherence.scala:30:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/system/Coherence.scala:30:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/system/Coherence.scala:30:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/system/Coherence.scala:30:7
      automatic logic [31:0] _RANDOM[0:3];	// src/main/scala/system/Coherence.scala:30:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/system/Coherence.scala:30:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/system/Coherence.scala:30:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/system/Coherence.scala:30:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// src/main/scala/system/Coherence.scala:30:7
        end	// src/main/scala/system/Coherence.scala:30:7
        state = _RANDOM[2'h0][2:0];	// src/main/scala/system/Coherence.scala:30:7, :45:22
        reqLatch_addr = {_RANDOM[2'h0][31:3], _RANDOM[2'h1][2:0]};	// src/main/scala/system/Coherence.scala:30:7, :45:22, :52:27
        reqLatch_cmd = _RANDOM[2'h1][9:6];	// src/main/scala/system/Coherence.scala:30:7, :52:27
        reqLatch_wdata = {_RANDOM[2'h1][31:18], _RANDOM[2'h2], _RANDOM[2'h3][17:0]};	// src/main/scala/system/Coherence.scala:30:7, :52:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/system/Coherence.scala:30:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/system/Coherence.scala:30:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_req_ready = io_in_req_ready_0;	// src/main/scala/system/Coherence.scala:30:7, :64:61, :66:19, :67:39
  assign io_in_resp_valid = io_in_resp_valid_0;	// src/main/scala/system/Coherence.scala:30:7, :72:14, :74:18
  assign io_in_resp_bits_cmd = io_in_resp_bits_cmd_0;	// src/main/scala/system/Coherence.scala:30:7, :72:14, :74:18
  assign io_in_resp_bits_rdata =
    _GEN_3 ? io_out_mem_resp_bits_rdata : io_out_coh_resp_bits_rdata;	// src/main/scala/system/Coherence.scala:30:7, :72:14, :74:18
  assign io_out_mem_req_valid = io_out_mem_req_valid_0;	// src/main/scala/system/Coherence.scala:30:7, :64:61, :74:18
  assign io_out_mem_req_bits_addr = _GEN_6 ? io_in_req_bits_addr : reqLatch_addr;	// src/main/scala/system/Coherence.scala:30:7, :52:27, :59:23, :74:18
  assign io_out_mem_req_bits_cmd = _GEN_6 ? io_in_req_bits_cmd : reqLatch_cmd;	// src/main/scala/system/Coherence.scala:30:7, :52:27, :59:23, :74:18
  assign io_out_mem_req_bits_wdata = _GEN_6 ? io_in_req_bits_wdata : reqLatch_wdata;	// src/main/scala/system/Coherence.scala:30:7, :52:27, :59:23, :74:18
  assign io_out_coh_req_valid =
    ~(io_in_req_bits_cmd[0]) & _GEN & io_in_req_valid & _io_in_req_ready_T_2;	// src/main/scala/bus/simplebus/SimpleBus.scala:73:{22,26}, src/main/scala/system/Coherence.scala:30:7, :46:24, :63:24, :64:61, :67:39
  assign io_out_coh_req_bits_addr = io_in_req_bits_addr;	// src/main/scala/system/Coherence.scala:30:7
  assign io_out_coh_req_bits_wdata = io_in_req_bits_wdata;	// src/main/scala/system/Coherence.scala:30:7
endmodule

