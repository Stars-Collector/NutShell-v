// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXI4Delayer(	// src/main/scala/bus/axi4/Delayer.scala:9:7
  output        io_in_awready,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_in_awvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [31:0] io_in_awaddr,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [7:0]  io_in_awlen,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_in_wready,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_in_wvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [63:0] io_in_wdata,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_in_wlast,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_in_bvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
                io_in_arready,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_in_arvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [31:0] io_in_araddr,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [7:0]  io_in_arlen,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_in_rvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output [63:0] io_in_rdata,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_in_rlast,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_out_awready,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_out_awvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output [31:0] io_out_awaddr,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_out_wready,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_out_wvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output [63:0] io_out_wdata,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_out_wlast,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_out_bvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output        io_out_arvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output [31:0] io_out_araddr,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  output [7:0]  io_out_arlen,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_out_rvalid,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input  [63:0] io_out_rdata,	// src/main/scala/bus/axi4/Delayer.scala:10:14
  input         io_out_rlast	// src/main/scala/bus/axi4/Delayer.scala:10:14
);

  LatencyPipe io_out_arpipe (	// src/main/scala/utils/LatencyPipe.scala:22:22
    .io_in_ready      (io_in_arready),
    .io_in_valid      (io_in_arvalid),
    .io_in_bits_addr  (io_in_araddr),
    .io_in_bits_len   (io_in_arlen),
    .io_out_ready     (1'h1),	// src/main/scala/bus/axi4/Delayer.scala:10:14, src/main/scala/utils/LatencyPipe.scala:22:22
    .io_out_valid     (io_out_arvalid),
    .io_out_bits_addr (io_out_araddr),
    .io_out_bits_len  (io_out_arlen)
  );
  LatencyPipe io_out_awpipe (	// src/main/scala/utils/LatencyPipe.scala:22:22
    .io_in_ready      (io_in_awready),
    .io_in_valid      (io_in_awvalid),
    .io_in_bits_addr  (io_in_awaddr),
    .io_in_bits_len   (io_in_awlen),
    .io_out_ready     (io_out_awready),
    .io_out_valid     (io_out_awvalid),
    .io_out_bits_addr (io_out_awaddr),
    .io_out_bits_len  (/* unused */)
  );
  assign io_in_wready = io_out_wready;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_in_bvalid = io_out_bvalid;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_in_rvalid = io_out_rvalid;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_in_rdata = io_out_rdata;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_in_rlast = io_out_rlast;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_out_wvalid = io_in_wvalid;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_out_wdata = io_in_wdata;	// src/main/scala/bus/axi4/Delayer.scala:9:7
  assign io_out_wlast = io_in_wlast;	// src/main/scala/bus/axi4/Delayer.scala:9:7
endmodule

