// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module CSRDiffWrapper(	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
  input        clock,	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
  input [63:0] io_csrState_privilegeMode,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mstatus,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_sstatus,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mepc,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_sepc,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mtval,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_stval,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mtvec,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_stvec,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mcause,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_scause,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_satp,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mip,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mie,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mscratch,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_sscratch,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_mideleg,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_csrState_medeleg,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
  input        io_archEvent_valid,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
  input [31:0] io_archEvent_interrupt,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
               io_archEvent_exception,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
  input [63:0] io_archEvent_exceptionPC,	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
  input [31:0] io_archEvent_exceptionInst	// src/main/scala/nutcore/backend/fu/CSR.scala:921:18
);

  reg [63:0] difftest_REG_privilegeMode;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mstatus;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_sstatus;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mepc;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_sepc;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mtval;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_stval;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mtvec;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_stvec;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mcause;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_scause;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_satp;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mip;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mie;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mscratch;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_sscratch;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_mideleg;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg [63:0] difftest_REG_medeleg;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  reg        difftestArchEvent_REG_valid;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
  reg [31:0] difftestArchEvent_REG_interrupt;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
  reg [31:0] difftestArchEvent_REG_exception;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
  reg [63:0] difftestArchEvent_REG_exceptionPC;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
  reg [31:0] difftestArchEvent_REG_exceptionInst;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
  reg        difftestArchEvent_REG_1_valid;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  reg [31:0] difftestArchEvent_REG_1_interrupt;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  reg [31:0] difftestArchEvent_REG_1_exception;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  reg [63:0] difftestArchEvent_REG_1_exceptionPC;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  reg [31:0] difftestArchEvent_REG_1_exceptionInst;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  always @(posedge clock) begin	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
    difftest_REG_privilegeMode <= io_csrState_privilegeMode;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mstatus <= io_csrState_mstatus;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_sstatus <= io_csrState_sstatus;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mepc <= io_csrState_mepc;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_sepc <= io_csrState_sepc;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mtval <= io_csrState_mtval;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_stval <= io_csrState_stval;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mtvec <= io_csrState_mtvec;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_stvec <= io_csrState_stvec;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mcause <= io_csrState_mcause;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_scause <= io_csrState_scause;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_satp <= io_csrState_satp;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mip <= io_csrState_mip;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mie <= io_csrState_mie;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mscratch <= io_csrState_mscratch;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_sscratch <= io_csrState_sscratch;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_mideleg <= io_csrState_mideleg;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftest_REG_medeleg <= io_csrState_medeleg;	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    difftestArchEvent_REG_valid <= io_archEvent_valid;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
    difftestArchEvent_REG_interrupt <= io_archEvent_interrupt;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
    difftestArchEvent_REG_exception <= io_archEvent_exception;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
    difftestArchEvent_REG_exceptionPC <= io_archEvent_exceptionPC;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
    difftestArchEvent_REG_exceptionInst <= io_archEvent_exceptionInst;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:43
    difftestArchEvent_REG_1_valid <= difftestArchEvent_REG_valid;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:{35,43}
    difftestArchEvent_REG_1_interrupt <= difftestArchEvent_REG_interrupt;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:{35,43}
    difftestArchEvent_REG_1_exception <= difftestArchEvent_REG_exception;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:{35,43}
    difftestArchEvent_REG_1_exceptionPC <= difftestArchEvent_REG_exceptionPC;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:{35,43}
    difftestArchEvent_REG_1_exceptionInst <= difftestArchEvent_REG_exceptionInst;	// src/main/scala/nutcore/backend/fu/CSR.scala:931:{35,43}
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
      automatic logic [31:0] _RANDOM[0:46];	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
        `INIT_RANDOM_PROLOG_	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
        for (logic [5:0] i = 6'h0; i < 6'h2F; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
        end	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
        difftest_REG_privilegeMode = {_RANDOM[6'h0], _RANDOM[6'h1]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mstatus = {_RANDOM[6'h2], _RANDOM[6'h3]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_sstatus = {_RANDOM[6'h4], _RANDOM[6'h5]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mepc = {_RANDOM[6'h6], _RANDOM[6'h7]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_sepc = {_RANDOM[6'h8], _RANDOM[6'h9]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mtval = {_RANDOM[6'hA], _RANDOM[6'hB]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_stval = {_RANDOM[6'hC], _RANDOM[6'hD]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mtvec = {_RANDOM[6'hE], _RANDOM[6'hF]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_stvec = {_RANDOM[6'h10], _RANDOM[6'h11]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mcause = {_RANDOM[6'h12], _RANDOM[6'h13]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_scause = {_RANDOM[6'h14], _RANDOM[6'h15]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_satp = {_RANDOM[6'h16], _RANDOM[6'h17]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mip = {_RANDOM[6'h18], _RANDOM[6'h19]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mie = {_RANDOM[6'h1A], _RANDOM[6'h1B]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mscratch = {_RANDOM[6'h1C], _RANDOM[6'h1D]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_sscratch = {_RANDOM[6'h1E], _RANDOM[6'h1F]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_mideleg = {_RANDOM[6'h20], _RANDOM[6'h21]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftest_REG_medeleg = {_RANDOM[6'h22], _RANDOM[6'h23]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :927:26
        difftestArchEvent_REG_valid = _RANDOM[6'h24][8];	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:43
        difftestArchEvent_REG_interrupt = {_RANDOM[6'h24][31:9], _RANDOM[6'h25][8:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:43
        difftestArchEvent_REG_exception = {_RANDOM[6'h25][31:9], _RANDOM[6'h26][8:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:43
        difftestArchEvent_REG_exceptionPC =
          {_RANDOM[6'h26][31:9], _RANDOM[6'h27], _RANDOM[6'h28][8:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:43
        difftestArchEvent_REG_exceptionInst = {_RANDOM[6'h28][31:9], _RANDOM[6'h29][8:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:43
        difftestArchEvent_REG_1_valid = _RANDOM[6'h29][17];	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:{35,43}
        difftestArchEvent_REG_1_interrupt = {_RANDOM[6'h29][31:18], _RANDOM[6'h2A][17:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:{35,43}
        difftestArchEvent_REG_1_exception = {_RANDOM[6'h2A][31:18], _RANDOM[6'h2B][17:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:35
        difftestArchEvent_REG_1_exceptionPC =
          {_RANDOM[6'h2B][31:18], _RANDOM[6'h2C], _RANDOM[6'h2D][17:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:35
        difftestArchEvent_REG_1_exceptionInst =
          {_RANDOM[6'h2D][31:18], _RANDOM[6'h2E][17:0]};	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11, :931:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
      `FIRRTL_AFTER_INITIAL	// src/main/scala/nutcore/backend/fu/CSR.scala:920:11
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DummyDPICWrapper_1 difftest_sink_module (	// difftest/src/main/scala/DPIC.scala:318:24
    .clock            (clock),
    .io_privilegeMode (difftest_REG_privilegeMode),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mstatus       (difftest_REG_mstatus),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_sstatus       (difftest_REG_sstatus),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mepc          (difftest_REG_mepc),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_sepc          (difftest_REG_sepc),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mtval         (difftest_REG_mtval),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_stval         (difftest_REG_stval),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mtvec         (difftest_REG_mtvec),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_stvec         (difftest_REG_stvec),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mcause        (difftest_REG_mcause),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_scause        (difftest_REG_scause),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_satp          (difftest_REG_satp),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mip           (difftest_REG_mip),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mie           (difftest_REG_mie),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mscratch      (difftest_REG_mscratch),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_sscratch      (difftest_REG_sscratch),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_mideleg       (difftest_REG_mideleg),	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
    .io_medeleg       (difftest_REG_medeleg)	// src/main/scala/nutcore/backend/fu/CSR.scala:927:26
  );
  DummyDPICWrapper_2 difftestArchEvent_sink_module (	// difftest/src/main/scala/DPIC.scala:318:24
    .clock            (clock),
    .io_valid         (difftestArchEvent_REG_1_valid),	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
    .io_interrupt     (difftestArchEvent_REG_1_interrupt),	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
    .io_exception     (difftestArchEvent_REG_1_exception),	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
    .io_exceptionPC   (difftestArchEvent_REG_1_exceptionPC),	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
    .io_exceptionInst (difftestArchEvent_REG_1_exceptionInst)	// src/main/scala/nutcore/backend/fu/CSR.scala:931:35
  );
endmodule

