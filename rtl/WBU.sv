// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module WBU(	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
  input         clock,	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
                reset,	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
                io_in_valid,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input  [63:0] io_in_bits_decode_cf_instr,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input  [38:0] io_in_bits_decode_cf_pc,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                io_in_bits_decode_cf_redirect_target,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input         io_in_bits_decode_cf_redirect_valid,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input  [2:0]  io_in_bits_decode_ctrl_fuType,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input         io_in_bits_decode_ctrl_rfWen,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input  [4:0]  io_in_bits_decode_ctrl_rfDest,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input         io_in_bits_isMMIO,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  input  [63:0] io_in_bits_intrNO,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                io_in_bits_commits_0,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                io_in_bits_commits_1,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                io_in_bits_commits_2,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                io_in_bits_commits_3,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  output        io_wb_rfWen,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  output [4:0]  io_wb_rfDest,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  output [63:0] io_wb_rfData,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  output [38:0] io_redirect_target,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
  output        io_redirect_valid,	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14
                falseWire__bore,
                io_in_valid__bore
);

  wire             _difftest_wb_sink_delayer_o_valid;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [4:0]       _difftest_wb_sink_delayer_o_address;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [63:0]      _difftest_wb_sink_delayer_o_data;	// difftest/src/main/scala/Difftest.scala:541:15
  wire             _difftest_commit_sink_delayer_o_valid;	// difftest/src/main/scala/Difftest.scala:541:15
  wire             _difftest_commit_sink_delayer_o_skip;	// difftest/src/main/scala/Difftest.scala:541:15
  wire             _difftest_commit_sink_delayer_o_isRVC;	// difftest/src/main/scala/Difftest.scala:541:15
  wire             _difftest_commit_sink_delayer_o_rfwen;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [4:0]       _difftest_commit_sink_delayer_o_wpdest;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [7:0]       _difftest_commit_sink_delayer_o_wdest;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [63:0]      _difftest_commit_sink_delayer_o_pc;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [31:0]      _difftest_commit_sink_delayer_o_instr;	// difftest/src/main/scala/Difftest.scala:541:15
  wire [63:0]      _LogPerfHelper_timer;	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
  wire             _LogPerfHelper_logEnable;	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
  wire             falseWire = 1'h0;	// src/main/scala/nutcore/backend/seq/WBU.scala:43:27, src/main/scala/utils/Debug.scala:49:26
  wire             io_wb_rfWen_0 = io_in_bits_decode_ctrl_rfWen & io_in_valid;	// src/main/scala/nutcore/backend/seq/WBU.scala:32:47
  wire [7:0][63:0] _GEN =
    {{io_in_bits_commits_0},
     {io_in_bits_commits_0},
     {io_in_bits_commits_0},
     {64'h0},
     {io_in_bits_commits_3},
     {io_in_bits_commits_2},
     {io_in_bits_commits_1},
     {io_in_bits_commits_0}};	// src/main/scala/nutcore/backend/seq/WBU.scala:26:14, :34:16
  `ifndef SYNTHESIS	// src/main/scala/utils/Debug.scala:49:26
    always @(posedge clock) begin	// src/main/scala/utils/Debug.scala:49:26
      if ((`PRINTF_COND_) & io_in_valid & _LogPerfHelper_logEnable & ~reset) begin	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26, :50:15
        $fwrite(32'h80000002, "[%d] WBU: ", _LogPerfHelper_timer);	// difftest/src/main/scala/common/LogPerfControl.scala:60:79, src/main/scala/utils/Debug.scala:49:26
        $fwrite(32'h80000002,
                "[COMMIT] pc = 0x%x inst %x wen %x wdst %x wdata %x mmio %x intrNO %x\n",
                io_in_bits_decode_cf_pc, io_in_bits_decode_cf_instr, io_wb_rfWen_0,
                io_in_bits_decode_ctrl_rfDest, _GEN[io_in_bits_decode_ctrl_fuType],
                io_in_bits_isMMIO, io_in_bits_intrNO);	// src/main/scala/nutcore/backend/seq/WBU.scala:32:47, :34:16, src/main/scala/utils/Debug.scala:49:26, :50:15
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  LogPerfHelper LogPerfHelper (	// difftest/src/main/scala/common/LogPerfControl.scala:60:79
    .timer     (_LogPerfHelper_timer),
    .logEnable (_LogPerfHelper_logEnable),
    .clean     (/* unused */),
    .dump      (/* unused */)
  );
  DummyDPICWrapper_4 difftest_commit_sink_module (	// difftest/src/main/scala/DPIC.scala:318:24
    .clock     (clock),
    .io_valid  (_difftest_commit_sink_delayer_o_valid),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_skip   (_difftest_commit_sink_delayer_o_skip),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_isRVC  (_difftest_commit_sink_delayer_o_isRVC),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_rfwen  (_difftest_commit_sink_delayer_o_rfwen),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_wpdest (_difftest_commit_sink_delayer_o_wpdest),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_wdest  (_difftest_commit_sink_delayer_o_wdest),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_pc     (_difftest_commit_sink_delayer_o_pc),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_instr  (_difftest_commit_sink_delayer_o_instr)	// difftest/src/main/scala/Difftest.scala:541:15
  );
  DelayReg difftest_commit_sink_delayer (	// difftest/src/main/scala/Difftest.scala:541:15
    .clock    (clock),
    .reset    (reset),
    .i_valid  (io_in_valid),
    .i_skip   (io_in_bits_isMMIO),
    .i_isRVC  (io_in_bits_decode_cf_instr[1:0] != 2'h3),	// src/main/scala/nutcore/backend/seq/WBU.scala:55:{57,62}
    .i_rfwen  (io_wb_rfWen_0 & (|io_in_bits_decode_ctrl_rfDest)),	// src/main/scala/nutcore/backend/seq/WBU.scala:32:47, :56:{43,59}
    .i_wpdest (io_in_bits_decode_ctrl_rfDest),
    .i_wdest  ({3'h0, io_in_bits_decode_ctrl_rfDest}),	// src/main/scala/nutcore/backend/seq/WBU.scala:34:16, :58:28
    .i_pc     ({{25{io_in_bits_decode_cf_pc[38]}}, io_in_bits_decode_cf_pc}),	// src/main/scala/utils/BitUtils.scala:41:20, :42:{41,46}
    .i_instr  (io_in_bits_decode_cf_instr[31:0]),	// src/main/scala/nutcore/backend/seq/WBU.scala:53:28
    .o_valid  (_difftest_commit_sink_delayer_o_valid),
    .o_skip   (_difftest_commit_sink_delayer_o_skip),
    .o_isRVC  (_difftest_commit_sink_delayer_o_isRVC),
    .o_rfwen  (_difftest_commit_sink_delayer_o_rfwen),
    .o_wpdest (_difftest_commit_sink_delayer_o_wpdest),
    .o_wdest  (_difftest_commit_sink_delayer_o_wdest),
    .o_pc     (_difftest_commit_sink_delayer_o_pc),
    .o_instr  (_difftest_commit_sink_delayer_o_instr)
  );
  DummyDPICWrapper_5 difftest_wb_sink_module (	// difftest/src/main/scala/DPIC.scala:318:24
    .clock      (clock),
    .io_valid   (_difftest_wb_sink_delayer_o_valid),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_address (_difftest_wb_sink_delayer_o_address),	// difftest/src/main/scala/Difftest.scala:541:15
    .io_data    (_difftest_wb_sink_delayer_o_data)	// difftest/src/main/scala/Difftest.scala:541:15
  );
  DelayReg_1 difftest_wb_sink_delayer (	// difftest/src/main/scala/Difftest.scala:541:15
    .clock     (clock),
    .reset     (reset),
    .i_valid   (io_wb_rfWen_0 & (|io_in_bits_decode_ctrl_rfDest)),	// src/main/scala/nutcore/backend/seq/WBU.scala:32:47, :56:59, :63:40
    .i_address (io_in_bits_decode_ctrl_rfDest),
    .i_data    (_GEN[io_in_bits_decode_ctrl_fuType]),	// src/main/scala/nutcore/backend/seq/WBU.scala:34:16
    .o_valid   (_difftest_wb_sink_delayer_o_valid),
    .o_address (_difftest_wb_sink_delayer_o_address),
    .o_data    (_difftest_wb_sink_delayer_o_data)
  );
  assign io_wb_rfWen = io_wb_rfWen_0;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7, :32:47
  assign io_wb_rfDest = io_in_bits_decode_ctrl_rfDest;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
  assign io_wb_rfData = _GEN[io_in_bits_decode_ctrl_fuType];	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7, :34:16
  assign io_redirect_target = io_in_bits_decode_cf_redirect_target;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
  assign io_redirect_valid = io_in_bits_decode_cf_redirect_valid & io_in_valid;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7, :39:60
  assign falseWire__bore = falseWire;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7, :43:27
  assign io_in_valid__bore = io_in_valid;	// src/main/scala/nutcore/backend/seq/WBU.scala:25:7
endmodule

