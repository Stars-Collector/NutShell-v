// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXI42SimpleBusConverter(	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
  input         clock,	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
                reset,	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
  output        io_in_awready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_in_awvalid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [31:0] io_in_awaddr,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [17:0] io_in_awid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [7:0]  io_in_awlen,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [2:0]  io_in_awsize,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_in_wready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_in_wvalid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [63:0] io_in_wdata,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [7:0]  io_in_wstrb,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_in_wlast,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
                io_in_bready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_in_bvalid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
                io_in_arready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_in_arvalid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [31:0] io_in_araddr,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [17:0] io_in_arid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [7:0]  io_in_arlen,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [2:0]  io_in_arsize,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_in_rready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_in_rvalid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [63:0] io_in_rdata,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_in_rlast,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [17:0] io_in_rid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_out_req_ready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_out_req_valid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [31:0] io_out_req_bits_addr,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [2:0]  io_out_req_bits_size,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [3:0]  io_out_req_bits_cmd,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [7:0]  io_out_req_bits_wmask,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output [63:0] io_out_req_bits_wdata,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  output        io_out_resp_ready,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input         io_out_resp_valid,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [3:0]  io_out_resp_bits_cmd,	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
  input  [63:0] io_out_resp_bits_rdata	// src/main/scala/bus/simplebus/ToAXI4.scala:27:14
);

  wire        io_in_bvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:134:27
  wire        io_in_wready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:133:38
  wire        io_in_awready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:132:33
  wire        io_in_rvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:130:36
  wire        io_out_req_valid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:127:52
  reg  [17:0] inflight_id_reg;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32
  reg  [1:0]  inflight_type;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30
  wire        _GEN = ~(|inflight_type) & io_in_arvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :64:{9,23}
  wire        _GEN_0 = io_out_req_ready & io_out_req_valid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:127:52, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _io_in_rvalid_T = inflight_type == 2'h1;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30, :50:19
  wire        _GEN_1 = _io_in_rvalid_T & io_out_resp_valid;	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :79:27
  wire        _io_in_rlast_T = io_out_resp_bits_cmd == 4'h6;	// src/main/scala/bus/simplebus/SimpleBus.scala:91:24
  wire        _GEN_2 = io_in_rready & io_in_rvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:130:36, src/main/scala/chisel3/util/Decoupled.scala:51:35
  reg  [31:0] aw_reg_addr;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
  reg  [7:0]  aw_reg_len;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
  reg  [2:0]  aw_reg_size;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
  reg         bresp_en;	// src/main/scala/bus/simplebus/ToAXI4.scala:95:25
  wire        _GEN_3 = io_in_awready_0 & io_in_awvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:132:33, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _io_in_wready_T = inflight_type == 2'h2;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30, :50:19
  wire        _GEN_4 = io_in_wready_0 & io_in_wvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:133:38, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _GEN_5 = _io_in_wready_T & _GEN_4;	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :105:28, src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        _GEN_6 = io_in_bready & io_in_bvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:134:27, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign io_out_req_valid_0 =
    ~(|inflight_type) & io_in_arvalid | _io_in_wready_T & io_in_wvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :127:{21,35,52,75}
  wire        io_out_resp_ready_0 =
    ~(|inflight_type) | _io_in_rvalid_T & io_in_rready | _io_in_wready_T
    & io_in_bready;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :128:{21,57,73,96}
  wire        io_in_arready_0 = ~(|inflight_type) & io_out_req_ready;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :129:{19,33}
  assign io_in_rvalid_0 = _io_in_rvalid_T & io_out_resp_valid;	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :130:36
  assign io_in_awready_0 = ~(|inflight_type) & ~io_in_arvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :97:42, :132:{19,33}
  assign io_in_wready_0 = _io_in_wready_T & io_out_req_ready;	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :133:38
  assign io_in_bvalid_0 = bresp_en & io_out_resp_valid;	// src/main/scala/bus/simplebus/ToAXI4.scala:95:25, :134:27
  `ifndef SYNTHESIS	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
    always @(posedge clock) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
      automatic logic _GEN_7 = io_out_resp_ready_0 & io_out_resp_valid;	// src/main/scala/bus/simplebus/ToAXI4.scala:128:73, src/main/scala/chisel3/util/Decoupled.scala:51:35
      if (io_in_arready_0 & io_in_arvalid & ~reset
          & ~(_GEN_0 & ~(|inflight_type))) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :64:9, :129:33, :137:{30,44}, src/main/scala/chisel3/util/Decoupled.scala:51:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
          $error("Assertion failed\n    at ToAXI4.scala:137 when (axi.ar.fire) { assert(mem.req.fire && !isInflight()); }\n");	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
        if (`STOP_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
          $fatal;	// src/main/scala/bus/simplebus/ToAXI4.scala:137:30
      end
      if (_GEN_3 & ~reset & (|inflight_type)) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :137:30, :138:30, src/main/scala/chisel3/util/Decoupled.scala:51:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:138:30
          $error("Assertion failed\n    at ToAXI4.scala:138 when (axi.aw.fire) { assert(!isInflight()); }\n");	// src/main/scala/bus/simplebus/ToAXI4.scala:138:30
        if (`STOP_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:138:30
          $fatal;	// src/main/scala/bus/simplebus/ToAXI4.scala:138:30
      end
      if (_GEN_4 & ~reset & ~(_GEN_0 & _io_in_wready_T)) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :137:30, :139:{29,44}, src/main/scala/chisel3/util/Decoupled.scala:51:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:139:29
          $error("Assertion failed\n    at ToAXI4.scala:139 when (axi.w.fire) { assert(mem.req .fire && isState(axi_write)); }\n");	// src/main/scala/bus/simplebus/ToAXI4.scala:139:29
        if (`STOP_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:139:29
          $fatal;	// src/main/scala/bus/simplebus/ToAXI4.scala:139:29
      end
      if (_GEN_6 & ~reset & ~(_GEN_7 & _io_in_wready_T)) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :137:30, :140:{29,44}, src/main/scala/chisel3/util/Decoupled.scala:51:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:140:29
          $error("Assertion failed\n    at ToAXI4.scala:140 when (axi.b.fire) { assert(mem.resp.fire && isState(axi_write)); }\n");	// src/main/scala/bus/simplebus/ToAXI4.scala:140:29
        if (`STOP_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:140:29
          $fatal;	// src/main/scala/bus/simplebus/ToAXI4.scala:140:29
      end
      if (_GEN_2 & ~reset & ~(_GEN_7 & _io_in_rvalid_T)) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:50:19, :137:30, :141:{29,44}, src/main/scala/chisel3/util/Decoupled.scala:51:35
        if (`ASSERT_VERBOSE_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:141:29
          $error("Assertion failed\n    at ToAXI4.scala:141 when (axi.r.fire) { assert(mem.resp.fire && isState(axi_read)); }\n");	// src/main/scala/bus/simplebus/ToAXI4.scala:141:29
        if (`STOP_COND_)	// src/main/scala/bus/simplebus/ToAXI4.scala:141:29
          $fatal;	// src/main/scala/bus/simplebus/ToAXI4.scala:141:29
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  always @(posedge clock) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
    automatic logic _GEN_8;	// src/main/scala/bus/simplebus/ToAXI4.scala:97:39
    _GEN_8 = ~(|inflight_type) & io_in_awvalid & ~io_in_arvalid;	// src/main/scala/bus/simplebus/ToAXI4.scala:40:30, :50:19, :64:9, :97:{39,42}
    if (reset) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      inflight_id_reg <= 18'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32, :60:5
      inflight_type <= 2'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30
      bresp_en <= 1'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32, :95:25
    end
    else begin	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      if (_GEN_6) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        inflight_id_reg <= 18'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32, :60:5
        inflight_type <= 2'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30
      end
      else if (_GEN_8 & _GEN_3) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:42:21, :79:46, :97:{39,57}, :100:24, src/main/scala/chisel3/util/Decoupled.scala:51:35
        inflight_id_reg <= io_in_awid;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32
        inflight_type <= 2'h2;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30
      end
      else if (_GEN_1 & _GEN_2 & _io_in_rlast_T) begin	// src/main/scala/bus/simplebus/SimpleBus.scala:91:24, src/main/scala/bus/simplebus/ToAXI4.scala:46:19, :64:40, :79:{27,46}, :88:42, src/main/scala/chisel3/util/Decoupled.scala:51:35
        inflight_id_reg <= 18'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32, :60:5
        inflight_type <= 2'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30
      end
      else if (_GEN & _GEN_0) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32, :42:21, :64:{23,40}, :74:25, src/main/scala/chisel3/util/Decoupled.scala:51:35
        inflight_id_reg <= io_in_arid;	// src/main/scala/bus/simplebus/ToAXI4.scala:38:32
        inflight_type <= 2'h1;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :40:30
      end
      bresp_en <= ~_GEN_6 & (_GEN_5 & io_in_wlast | bresp_en);	// src/main/scala/bus/simplebus/ToAXI4.scala:95:25, :105:{28,43}, :115:19, :116:16, :120:21, :121:14, src/main/scala/chisel3/util/Decoupled.scala:51:35
    end
    if (_GEN_8) begin	// src/main/scala/bus/simplebus/ToAXI4.scala:97:39
      aw_reg_addr <= io_in_awaddr;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
      aw_reg_len <= io_in_awlen;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
      aw_reg_size <= io_in_awsize;	// src/main/scala/bus/simplebus/ToAXI4.scala:94:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      automatic logic [31:0] _RANDOM[0:3];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
        end	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
        inflight_id_reg = _RANDOM[2'h0][17:0];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :38:32
        inflight_type = _RANDOM[2'h0][19:18];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :38:32, :40:30
        aw_reg_addr = {_RANDOM[2'h0][31:20], _RANDOM[2'h1][19:0]};	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :38:32, :94:19
        aw_reg_len = _RANDOM[2'h2][17:10];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :94:19
        aw_reg_size = _RANDOM[2'h2][20:18];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :94:19
        bresp_en = _RANDOM[2'h3][0];	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :95:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_awready = io_in_awready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :132:33
  assign io_in_wready = io_in_wready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :133:38
  assign io_in_bvalid = io_in_bvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :134:27
  assign io_in_arready = io_in_arready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :129:33
  assign io_in_rvalid = io_in_rvalid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :130:36
  assign io_in_rdata = _GEN_1 ? io_out_resp_bits_rdata : 64'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :57:33, :60:5, :79:{27,46}, :81:12
  assign io_in_rlast = _GEN_1 & _io_in_rlast_T;	// src/main/scala/bus/simplebus/SimpleBus.scala:91:24, src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :60:5, :79:{27,46}, :85:12
  assign io_in_rid = _GEN_1 ? inflight_id_reg : 18'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :38:32, :60:5, :79:{27,46}, :82:10
  assign io_out_req_valid = io_out_req_valid_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :127:52
  assign io_out_req_bits_addr = _GEN_5 ? aw_reg_addr : _GEN ? io_in_araddr : 32'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :57:33, :59:7, :64:{23,40}, :66:14, :94:19, :105:{28,43}, :109:14
  assign io_out_req_bits_size = _GEN_5 ? aw_reg_size : _GEN ? io_in_arsize : 3'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :59:7, :64:{23,40}, :69:14, :94:19, :105:{28,43}, :110:14
  assign io_out_req_bits_cmd =
    _GEN_5
      ? {1'h0, aw_reg_len == 8'h0 ? 3'h1 : {io_in_wlast, 2'h3}}
      : _GEN ? {2'h0, |io_in_arlen, 1'h0} : 4'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :38:32, :57:33, :59:7, :64:{23,40}, :67:{13,27}, :94:19, :105:{28,43}, :107:{13,19,31}, :108:10
  assign io_out_req_bits_wmask = _GEN_5 ? io_in_wstrb : 8'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :57:33, :64:40, :105:{28,43}, :111:15
  assign io_out_req_bits_wdata = _GEN_5 ? io_in_wdata : 64'h0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :57:33, :64:40, :105:{28,43}, :112:15
  assign io_out_resp_ready = io_out_resp_ready_0;	// src/main/scala/bus/simplebus/ToAXI4.scala:25:7, :128:73
endmodule

